What is a Binary Heap?
- Very similar to binary seach tree, but with some different rules!
- In a MaxBinaryHeap, parent nodes are always larger than child nodes.
- In a MinBinaryHeap, parent nodes are always smaller than child nodes

Xteristics
- Each parent has at most two child nodes
- The valie of of each parent node is greater than its child nodes.
- In a max Binary Heap, the parent is greater than the children, but there
  are no guarantees between sibling nodes
- A binary heap is a compact as possible. All the children of each node are
  as full as they can be and left children are filled out first

USES
- Binary Heaps are used to implement Priproty Queues, which are very commonly
  used data structures.
- They are also used quite a bit, with graph traversal algorithms

STORING HEAPS
THERE'S AN EASY WAY OF CONSTRUCTING A BINARY HEAP -> with the use of A LIST/ARRAY
1.
    - For any index of an array n...
    - The left child is stored at 2n+1
    - The right child is at 2n+2

2.
    - For any child node at index n...
    - Its parent is at index Math.floor((n-1)/2)


REMOVING FROM HEAPS -> Dequeue, Poll
- shift out the root
- Replace it with the new node in the arraylist
- Adjust (sink down)

REMOVING PROVIDED VALUES FROM HEAPS -> Remove(val)
- Search and find the node
- swap the node with the last item in arraylist
- pop out the node
- if we can bubble up the swapped item, we do that, else if we can sinkdown we sink down the item : else we do nothing

ADDING TO HEAPS -> Enqueue, Insert
- Push to the arraylist
- bubble up

SEARCHING HEAPS
- BFS, DFS,
- Hashtable storages and lookups

PRIORITY QUEUES
- A data structure where each elemenet has a priority. Elements with higher
  priorities are served before elements with lower priorities.